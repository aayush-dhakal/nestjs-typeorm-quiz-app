1. To create a nest.js project with specific version you have to use the specific verison cli:
-> npx @nestjs/cli@8.0.0 new my-nest-project

2. Using cli
 a. to generate modules
  i. if nestcli is globally installed then simply use:
   - nest generate module modules/quiz  or - nest g mo module/quiz
  ii. if you want to use npx then(use this when nestjs/cli is not globally installed and only internally installed using point number 1 method):
   - npx @nestjs/cli generate module modules/quiz

 b. to generate controller
  i. without test files:
  => nest g co quiz --no-spec or npx @nestjs/cli generate controller quiz --no-spec
  ii. with test files:
  => nest g co quiz or npx @nestjs/cli generate controller quiz


 c. to generate service
  i. without test files:
   - nest g service modules/auth --no-spec
  ii. with test files:
   - nest g service modules/auth


2. For migration:
 - make sure to delete all tables first to start fresh then 
 a. to check all migrations:
 => yarn typeorm:cli migration:show 

 b. then create base migration file(the generated file will be inside database/migrations). This will have commands to create tables with out defined entitites:
 => yarn migration:generate BaseMigrations
 or => npm run migration:generate BaseMigrations

 c. To run the migrations:
 => yarn migration:run

 d. to revert or run migration down:
 => yarn migration:revert

3. for local strategy passport authentication:
 - you must send username and password in payload with email and passport as value. like:
  {
    "username":"r@g.com",
    "password":"Password@123"
  }